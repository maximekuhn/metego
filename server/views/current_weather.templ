package views

import "github.com/maximekuhn/metego/weather"
import "fmt"

templ CurrentWeather(city string, current *weather.CurrentWeather) {
    // get current weather every 10 minutes
	<div hx-get={ fmt.Sprintf("/api/weather/current?city=%s", city) } hx-trigger="load, every 600s" hx-swap="innerHTML">
		@CurrentWeatherComp(current)
	</div>
}

templ CurrentWeatherComp(current *weather.CurrentWeather) {
	if current != nil {
		<div class={ currentWeatherStyles() }>
			<div class={ currentWeatherRowStyle() }>
				<div class={ currentWeatherMetricCard() }>
					<span class={ currentWeatherMetricCardTitle() }>Température</span>
					<span class={ currentWeatherMetricCardMetric() }>{ fmt.Sprintf("%.1f", current.Temp) } °C</span>
				</div>
				<div class={ currentWeatherMetricCard() }>
					<span class={ currentWeatherMetricCardTitle() }>Ressenti</span>
					<span class={ currentWeatherMetricCardMetric() }>{ fmt.Sprintf("%.1f", current.FeelsLike) } °C</span>
				</div>
				<div class={ currentWeatherMetricCard() }>
					<span class={ currentWeatherMetricCardTitle() }>Pression atmosphérique</span>
					<span class={ currentWeatherMetricCardMetric() }>{ fmt.Sprintf("%d", int(current.Pressure)) } hPa</span>
				</div>
				<div class={ currentWeatherMetricCard() }>
					<span class={ currentWeatherMetricCardTitle() }>Humidité</span>
					<span class={ currentWeatherMetricCardMetric() }>{ fmt.Sprintf("%d", int(current.Humidity)) } %</span>
				</div>
			</div>
		</div>
	} else {
		<div>
			<p>Oops ... :/</p>
		</div>
	}
}

css currentWeatherStyles() {
	background-color: #EFEFEF;
	padding-left: 10px;
	padding-right: 10px;
	border-radius: 3px;
}

css currentWeatherRowStyle() {
	display: flex;
	justify-content: space-between;
	padding: 5px;
}

css currentWeatherMetricCard() {
	display: flex;
	flex-direction: column;
	align-items: center;
}

css currentWeatherMetricCardTitle() {
	font-size: 24px;
}

css currentWeatherMetricCardMetric() {
}
