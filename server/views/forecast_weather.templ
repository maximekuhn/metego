package views

import "github.com/maximekuhn/metego/weather"
import "fmt"
import "time"

templ ForecastWeather(city string) {
	// get forecast weather every 2 hours
	<div hx-get={ fmt.Sprintf("/api/weather/forecast?city=%s&days=4", city) } hx-trigger="load, every 7200s" hx-swap="innerHTML" class="forecast-weather-container">
		@ForecastWeatherComp(nil)
	</div>
}

templ ForecastWeatherComp(forecasts []*weather.ForecastWeather) {
	if forecasts != nil  || len(forecasts) > 0 {
		<div id="forecast-weather-cards">
			for _, forecast := range forecasts {
				@ForeWeatherCard(forecast)
			}
		</div>
	} else {
		<div>
			<p>Oops ... :/</p>
		</div>
	}
}

templ ForeWeatherCard(forecast *weather.ForecastWeather) {
	<div id="forecast-weather-card">
		<div id="forecast-weather-card-date">
			<span>
				{ forecastWeatherTitle(forecast.Date) }
			</span>
		</div>
		<div id="forecast-weather-card-img">
			<img src={ imagePath(forecast.Icon) } alt={ imageAlt(forecast.Icon) }/>
		</div>
		<div id="forecast-weather-card-max-temp">{ fmt.Sprintf("%.1f", forecast.HighestTemp) }</div>
		<div id="forecast-weather-card-min-temp">{ fmt.Sprintf("%.1f", forecast.LowestTemp) }</div>
		<div id="forecast-weather-card-rain">
			<img src="/static/images/weather_icons/rain-drop.png" alt="pop"/>
			{ fmt.Sprintf("%d", int(forecast.Pop)) } %
		</div>
	</div>
}

func forecastWeatherTitle(t time.Time) string {
	daysFrench := []string{"Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"}
	return fmt.Sprintf("%s. %02d", daysFrench[t.Weekday()][:3], t.Day())
}
