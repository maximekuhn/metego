package views

import "fmt"
import "github.com/maximekuhn/metego/calendar"

templ Calendar(birthdays []*calendar.Birthday) {
	// load events every 5 minutes
	<div hx-get={ fmt.Sprintf("/api/birthdays") } hx-trigger="load, every 300s" hx-swap="innerHTML" class={ calendarBarStyles() }>
		@CalendarEvents(birthdays)
	</div>
}

templ CalendarEvents(birthdays []*calendar.Birthday) {
	<div class="calendar-events">
		<style>
            .calendar-events {
                background-color: #D1345B;
                color: white;
                border-radius: 3px;
                padding-left: 10px;
                padding-right: 10px;
                font-size: 24px;
                box-sizing: border-box;
                overflow: hidden;
            }

            .calendar-events p {
                -moz-transform: translateX(100%);
                -webkit-transform: translateX(100%);
                transform: translateX(100%);
                -moz-animation: scroll-left 20s linear infinite;
                -webkit-animation: scroll-left 20s linear infinite;
                animation: scroll-left 20s linear infinite;
            }

            @-moz-keyframes scroll-left {
                0% { -moz-transform: translateX(100%); }
                100% { -moz-transform: translateX(-100%); }
            }
            @-webkit-keyframes scroll-left {
                0% { -webkit-transform: translateX(100%); }
                100% { -webkit-transform: translateX(-100%); }
            }
            @keyframes scroll-left {
                0% {
                    -moz-transform: translateX(100%); /* Browser bug fix */
                    -webkit-transform: translateX(100%); /* Browser bug fix */
                    transform: translateX(100%);
                }
                100% {
                    -moz-transform: translateX(-100%); /* Browser bug fix */
                    -webkit-transform: translateX(-100%); /* Browser bug fix */
                    transform: translateX(-100%);
                }
            }
    </style>
		if birthdays == nil || len(birthdays) == 0 {
			<p>
				Pas d'évènement aujourd'hui...
			</p>
		} else {
			<p><span>Anniversaire</span><span class={ birthdaysNamesStyles() }>{ createBirthdaysString(birthdays) }</span></p>
		}
	</div>
}

css calendarBarStyles() {
    position: fixed;
    bottom: 0;
    width: 90%;
    padding-left: 5%;
    padding-bottom: 10px;
}

css birthdaysNamesStyles() {
	font-size: 30px;
}

func createBirthdaysString(birthdays []*calendar.Birthday) string {
	names := make([]string, len(birthdays))
	for _, bd := range birthdays {
		names = append(names, bd.Name)
	}

	return strings.Join(names, " ")
}
